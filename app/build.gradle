apply plugin: 'com.android.application'

android {
    namespace 'com.suleman.eagleeye'
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        applicationId "com.suleman.eagleeye"
        minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
        versionCode 2
        versionName "1.0"
        
        // Use manifestPlaceholders like in sample code
        manifestPlaceholders["API_KEY"] = project.AIRCRAFT_API_KEY
        manifestPlaceholders["GMAP_API_KEY"] = project.GMAP_API_KEY ?: ""
        manifestPlaceholders["MAPLIBRE_TOKEN"] = project.MAPLIBRE_TOKEN ?: ""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        ndk {
            // DJI SDK V5 supports arm64-v8a
            abiFilters 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Native library debugging for release
            debuggable false
            jniDebuggable false
        }
        debug {
            minifyEnabled false
            
            // Enhanced native library debugging for debug builds
            debuggable true
            jniDebuggable true
            renderscriptDebuggable false
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    packagingOptions {
        // Enhanced native library handling for crash prevention
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libc++.so'
        pickFirst '**/liblog.so'
        pickFirst '**/libz.so'
        
        // Handle duplicate shared libraries - same as sample code
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        
        // DJI SDK V5 specific libraries - copied from sample
        doNotStrip "*/*/libconstants.so"
        doNotStrip "*/*/libdji_innertools.so"
        doNotStrip "*/*/libdjibase.so"
        doNotStrip "*/*/libDJICSDKCommon.so"
        doNotStrip "*/*/libDJIFlySafeCore-CSDK.so"
        doNotStrip "*/*/libdjifs_jni-CSDK.so"
        doNotStrip "*/*/libDJIRegister.so"
        doNotStrip "*/*/libdjisdk_jni.so"
        doNotStrip "*/*/libDJIUpgradeCore.so"
        doNotStrip "*/*/libDJIUpgradeJNI.so"
        doNotStrip "*/*/libDJIWaypointV2Core-CSDK.so"
        doNotStrip "*/*/libdjiwpv2-CSDK.so"
        doNotStrip "*/*/libFlightRecordEngine.so"
        doNotStrip "*/*/libvideo-framing.so"
        doNotStrip "*/*/libwaes.so"
        doNotStrip "*/*/libagora-rtsa-sdk.so"
        doNotStrip "*/*/libc++.so"
        doNotStrip "*/*/libc++_shared.so"
        doNotStrip "*/*/libmrtc_28181.so"
        doNotStrip "*/*/libmrtc_agora.so"
        doNotStrip "*/*/libmrtc_core.so"
        doNotStrip "*/*/libmrtc_core_jni.so"
        doNotStrip "*/*/libmrtc_data.so"
        doNotStrip "*/*/libmrtc_log.so"
        doNotStrip "*/*/libmrtc_onvif.so"
        doNotStrip "*/*/libmrtc_rtmp.so"
        doNotStrip "*/*/libmrtc_rtsp.so"
    }
    
    buildFeatures {
        viewBinding true
    }
    
    //关闭lint
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    /** <-----------------依赖MSDK--------------------> **/
    // CRITICAL pattern from sample code - ALL three dependencies needed!
    compileOnly deps.aircraftProvided  // Compile-time interface
    implementation deps.aircraft        // Runtime implementation
    implementation deps.networkImp      // Network implementation - REQUIRED!

    // Android Core Dependencies
    implementation deps.appcompat
    implementation deps.material
    implementation deps.constraintLayout
    implementation deps.cardview
    
    // Lifecycle Components
    implementation deps.lifecycleViewModel
    implementation deps.lifecycleLiveData
    implementation deps.lifecycleJava8
    
    // Activity Result API
    implementation deps.fragment
    
    // Google Maps for Waypoint Activity
    implementation deps.playservicesmaps
    implementation deps.playserviceslocation
    implementation deps.playservicesbase
    
    // LocalBroadcastManager for service communication
    implementation deps.localbroadcastmanager
    
    // RxJava (required by some DJI SDK components)
    implementation deps.rx3Android

    implementation ("com.google.code.gson:gson:2.9.1")
    implementation ("com.squareup.retrofit2:retrofit:2.9.0")
    implementation ("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Testing Dependencies
    testImplementation deps.junit4
    androidTestImplementation deps.junitExt
    androidTestImplementation deps.espressoCore
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
